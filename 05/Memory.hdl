// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
	
	Mux(a=false, b=true, sel=address[13], out=kbdloadv0);
	And(a=kbdloadv0, b=address[14], out=kbdload);
	Keyboard(out=kbdout);
	
	Not(in=address[13], out=screenloadv0);
	And(a=screenloadv0, b=address[14], out=screenloadv1);
	And(a=screenloadv1, b=load, out=screenload);
	Screen(in=in, load=screenload, address=address[0..12], out=screenout);
	
	Not(in=address[14], out=notaddr14);
	And(a=notaddr14, b=load, out=memload);
	RAM16K(in=in, load=memload, address=address[0..13], out=memout);
	
	Mux16(a=screenout, b=memout, sel=notaddr14, out=v1);
	Mux16(a=v1, b=kbdout, sel=kbdload, out=out);
}